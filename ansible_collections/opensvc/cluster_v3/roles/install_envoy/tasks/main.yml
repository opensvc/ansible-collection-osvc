---
# tasks file for install_envoy

- name: Check existence of envoy configuration and service
  block:
    - name: Check for envoy cfgmap existence
      ansible.builtin.command: om system/cfg/envoy ls
      changed_when: false
      register: osvc_envoy_cfgmap_query
      run_once: true

    - name: Check for envoy service existence
      ansible.builtin.command: om {{ osvc_envoy_service_name }} ls
      changed_when: false
      register: osvc_envoy_svc_query
      run_once: true

    - name: Set envoy creation flags based on existence
      ansible.builtin.set_fact:
        envoy_cfg_created: "{{ osvc_envoy_cfgmap_name in osvc_envoy_cfgmap_query.stdout }}"
        envoy_svc_created: "{{ osvc_envoy_service_name in osvc_envoy_svc_query.stdout }}"
      run_once: true

- name: Create and configure envoy cfgmap if needed
  when: not envoy_cfg_created
  block:
    - name: Create envoy cfgmap
      ansible.builtin.command: om {{ osvc_envoy_cfgmap_name }} create
      run_once: true
      register: output
      changed_when: output.rc == 0

    - name: Set envoy cfgmap server key content
      ansible.builtin.command: om {{ osvc_envoy_cfgmap_name }} add --key xds.yaml --from {{ osvc_envoy_cfg_xds_template }}
      run_once: true
      register: output
      changed_when: output.rc == 0

- name: Deploy envoy service if needed
  when: not envoy_svc_created
  block:
    - name: Deploy envoy service
      ansible.builtin.command: om {{ osvc_envoy_service_name }} deploy --config {{ osvc_envoy_svc_template }}
      run_once: true
      register: output
      changed_when: output.rc == 0

    - name: Wait for envoy service
      ansible.builtin.command: | 
    om node event --wait --filter 'InstanceStatusUpdated,node={{ ansible_play_hosts[0] }},path={{ osvc_envoy_service_name }},.instance_status.avail="up",.instance_status.provisioned="true"'
    --duration 60s -o json
      run_once: true
      changed_when: false
