---

- name: Ensure service is running on first node
  ansible.builtin.command: "om {{ install_slapos_comp1_svcpath }} takeover --wait"
  register: output
  changed_when: output.rc == 0
  when:
    - inventory_hostname == ansible_play_hosts[0]

- name: Get fs install root
  ansible.builtin.command: "om {{ install_slapos_comp1_svcpath }} eval --kw fs#0.mnt"
  register: output
  changed_when: output.rc == 0
  when:
    - inventory_hostname == ansible_play_hosts[0]

- name: Remove slapos crontab on first node
  ansible.builtin.file:
    path: /etc/cron.d/slapos-node
    state: absent

- name: Set fact on slapos existence
  ansible.builtin.set_fact:
    slapos_root: "{{ output.stdout }}/slapos"
    slapos_etc: "{{ output.stdout }}/slapos/etc/opt/slapos"
    slapos_soft: "{{ output.stdout }}/slapos/opt/slapgrid"
    slapos_inst: "{{ output.stdout }}/slapos/srv/slapgrid"
  when:
    - inventory_hostname == ansible_play_hosts[0]

- name: Check if configuration already exists
  stat: path="{{ slapos_etc }}/slapos.conf"
  register: slapos_conf
  when:
    - inventory_hostname == ansible_play_hosts[0]

- name: Configure slapos with slapos node register
  shell: slapos node register --cfg {{ slapos_etc }}/slapos.cfg --token {{ install_slapos_comp1_token }} --master-url {{ install_slapos_comp1_master_url }} --master-url-web {{ install_slapos_comp1_web_master_url }} --interface-name {{ install_slapos_comp1_interface_name }} --partition-number {{ install_slapos_comp1_partition_number }} {{ install_slapos_comp1_computer_name }} --software-root {{ slapos_soft }} --instance-root {{ slapos_inst }}
  when:
    - inventory_hostname == ansible_play_hosts[0]
    - slapos_conf.stat.exists == False

      #- name: Complete slapos config
      #  ansible.builtin.blockinfile:
      #    path: "{{ slapos_etc }}/slapos.conf"
      #    block: |
      #      log {{ slapos_root }}/slapos/log
      #      run {{ slapos_root }}/slapos/run
      #      state {{ slapos_root }}/slapos/state
      #    marker: "# required for opensvc failover"
      #    insertafter: EOF
      #  when:
      #    - inventory_hostname == ansible_play_hosts[0]
      #    - slapos_conf.stat.exists == False
      #
      #

- name: Enable slapos app management with OpenSVC
  ansible.builtin.command: "om {{ install_slapos_comp1_svcpath }} enable --rid app#1"
  register: enable
  changed_when: enable.rc == 0
  when:
    - inventory_hostname == ansible_play_hosts[0]
    - slapos_conf.stat.exists == False

- name: Start slapos app management with OpenSVC
  ansible.builtin.command: "om {{ install_slapos_comp1_svcpath }} start --rid app#1"
  register: start
  changed_when: start.rc == 0
  when:
    - inventory_hostname == ansible_play_hosts[0]
    - slapos_conf.stat.exists == False

- name: Force status evaluation
  ansible.builtin.command: "om {{ install_slapos_comp1_svcpath }} print status -r"
  changed_when: false
  when:
    - inventory_hostname == ansible_play_hosts[0]
    - slapos_conf.stat.exists == False
