---
# tasks file for provision_cluster

- name: Distribution
  debug: msg="{{ ansible_distribution }}"

- name: Distribution version
  debug: msg="{{ ansible_distribution_version }}"

- name: Distribution major version
  debug: msg="{{ ansible_distribution_major_version }}"

- name: Include OS variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Deploy per OS prerequisites
  include_tasks: "install-{{ ansible_os_family }}.yml"

- name: Debug node count
  ansible.builtin.debug:
    var: nodecount
    verbosity: 2

- name: Gather the package facts
  package_facts:
    manager: auto

- name: Download OpenSVC agent latest package
  get_url:
    url: "{{ osvc_repo_url }}"
    dest: "{{ osvc_pkg_dl_path }}"
    force: true
    mode: 0600
  when: "'opensvc' not in ansible_facts.packages"

- name: Install OpenSVC agent package
  include_tasks: "install-{{ ansible_os_family }}-opensvc.yml"
  when: "'opensvc' not in ansible_facts.packages"

- name: Remove package file from /tmp
  file:
    path: "{{ osvc_pkg_dl_path }}"
    state: absent
  when: "'opensvc' not in ansible_facts.packages"

- name: Enable opensvc-agent.service unit file
  service:
    name: opensvc-agent.service
    enabled: true
    state: started

- name: Ensure resolver is aware of cluster nodes
  ansible.builtin.debug:
    msg: "{{ lookup('community.general.dig', item ) }}"
  with_items: "{{ ansible_play_hosts }}"

- name: Update /etc/hosts file
  blockinfile:
    dest: /etc/hosts
    content: "{{ lookup('template', 'templates/hosts.j2') }}"
    state: present
  when:
    - osvc_update_etc_hosts is true

- name: Enable ssh root access accross cluster nodes
  replace:
    dest: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin (yes|without-password)'
    replace: "PermitRootLogin prohibit-password"
  notify: Reload sshd

- name: Enable sysrq trigger
  sysctl:
    name: kernel.sysrq
    value: '1'
    state: present
    sysctl_file: /etc/sysctl.d/99-opensvc-sysrq.conf
    sysctl_set: true

########################## FIRST NODE ##########################

- name: Check hb cluster param exists on first node
  command: om cluster get --kw hb#1.type
  register: clusterhbtype
  changed_when: false
  failed_when: false
  when: inventory_hostname == ansible_play_hosts[0]

- name: Configure cluster with unicast hb
  command: om cluster set --kw hb#1.type=unicast --kw hb#1.timeout={{ osvc_hb_timeout }}
  when:
    - inventory_hostname == ansible_play_hosts[0]
    - clusterhbtype.stdout == "None"

- name: Get current cluster name
  command: om cluster get --kw cluster.name
  register: clustername
  changed_when: false
  failed_when: false
  when:
    - inventory_hostname == ansible_play_hosts[0]

- name: Set cluster name
  command: "om cluster set --kw cluster.name={{ osvc_clustername }}"
  when:
    - inventory_hostname == ansible_play_hosts[0]
    - clustername.stdout != osvc_clustername

- name: Get cluster secret on first node
  command: om cluster get --kw cluster.secret
  register: clustersecret
  changed_when: false
  failed_when: false
  when:
    - inventory_hostname == ansible_play_hosts[0]
    - nodecount|int > 1

########################## OTHER NODES ##########################

- name: Check other nodes are joined to a cluster
  command: om cluster get --kw cluster.nodes
  register: clusternodes
  changed_when: false
  failed_when: false
  when:
    - nodecount|int > 1

- name: Consider that we have join the cluster
  set_fact:
    joined: 'true'
  when:
    - nodecount|int > 1

- name: Check if we are actually joined
  set_fact:
    joined: 'false'
  when:
    - nodecount|int > 1
    - clusternodes.stdout == ansible_hostname
    - inventory_hostname != ansible_play_hosts[0]

- name: Join other nodes to the cluster
  command: "om daemon join --secret {{ hostvars[ansible_play_hosts[0]].clustersecret.stdout }} --node {{ hostvars[ansible_play_hosts[0]].ansible_hostname }}"
  when:
    - nodecount|int > 1
    - not joined

- name: Wait for join to be terminated
  command: 'om node wait --duration 20s --filter monitor.nodes.{{ ansible_hostname }}.monitor.status=idle'
  when:
    - nodecount|int > 1
    - not joined

- name: Add mutual root ssh trust
  command: 'om node update ssh authorized keys --node "*"'
  when:
    - nodecount|int > 1
    - not joined
